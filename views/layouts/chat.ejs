<div class="row">
    <div class="col-md-4">
      <ul class="list-group">
        <% if (friends.length > 0) { for(let i = 0; i < friends.length; i++){ %>
        <li
          class="list-group-item list-group-item-dark cursor-pointer user-list"
          data-id="<%= friends[i]['_id'] %>"
        >
          <img
            src="data:image/jpeg;base64,<%= friends[i]['image'] %>"
            alt="User image"
            width="150px"
            height="150px"
          />
          <%= friends[i]['name'] %> <% if (friends[i]['is_online'] == 1) { %>
          <sup class="online-status" id="<%= friends[i]['_id'] %>-status"
            >Online</sup
          >
          <% } else { %>
          <sup class="offline-status" id="<%= friends[i]['_id'] %>-status"
            >Offline</sup
          >
          <% } %>
        </li>
        <% } } %>
      </ul>
    </div>
    <div class="col-md-8">
      <h3 class="start-head">Click to start the chat</h3>
      <div class="chat-section">
        <div id="chat-container"></div>
        <form action="" id="chat-form">
          <input
            type="text"
            name="message"
            placeholder="Enter Message"
            id="message"
            class="border"
            required
          />
          <input type="submit" value="Send Message" class="btn btn-primary" />
        </form>
      </div>
    </div>
  </div>
  
  <script>
    var sender_id = "<%= user._id %>";
    var receiver_id;
    var socket = io("/user-namespace", {
      auth: {
        token: "<%= user._id %>",
      },
    });
  
    $(document).ready(function(){
      $(".user-list").click(function () {
        var userId = $(this).attr("data-id");

        if(receiver_id === userId) {
                // If yes, close the chat section
                $(".start-head").show();
                $(".chat-section").hide();
                receiver_id = null; // Reset receiver_id
            } else {
                // If no, open the chat section for the clicked user
                receiver_id = userId;
                $(".start-head").hide();
                $(".chat-section").show();
                socket.emit("existsChat", {
                    sender_id:sender_id,
                    receiver_id:receiver_id,
                });
            }
      });
    });
  
    // update user online status
    socket.on("getOnlineUser", function (data) {
      $("#" + data.user_id + "-status").text("Online");
      $("#" + data.user_id + "-status").removeClass("offline-status");
      $("#" + data.user_id + "-status").addClass("online-status");
    });
  
    // update user offline status
    socket.on("getOfflineUser", function (data) {
      $("#" + data.user_id + "-status").text("Offline");
      $("#" + data.user_id + "-status").addClass("offline-status");
      $("#" + data.user_id + "-status").removeClass("online-status");
    });
  
    // Handle user disconnect event
    socket.on("disconnect", function () {
      $("#" + sender_id + "-status").text("Offline");
      $("#" + sender_id + "-status").addClass("offline-status");
      $("#" + sender_id + "-status").removeClass("online-status");
    });
  
    //chat save of user
    $("#chat-form").submit(function (event) {
      event.preventDefault();
  
      var message = $("#message").val();
  
      $.ajax({
        url: "/save-chat",
        type: "POST",
        data: {
          sender_id: sender_id,
          receiver_id: receiver_id,
          message: message,
        },
        success: function (response) {
          if (response.success) {
            console.log(response.data.message);
            var message = $("#message").val("");
            let chat = response.data.message;
            let html =
              `
            <div class="current-user-chat">
              <h5>` +
              chat +
              `</h5>
            </div>
            `;
            $("#chat-container").append(html);
            socket.emit("newChat", response.data);
          } else {
            alert(data.msg);
          }
        },
      });
    });
  
    socket.on("loadNewChat", function (data) {
      if (sender_id == data.receiver_id && receiver_id == data.sender_id) {
        let html =
          `
      <div class="distance-user-chat">
        <h5>` +
          data.message +
          `</h5>
      </div>
      `;
        $("#chat-container").append(html);
      }
    });
  
    //load old chats
  
    socket.on("loadChats", function (data) {  
      $("#chat-container").html("");
  
      var chats = data.chats;
  
      let html = "";
  
      for (let x = 0; x < chats.length; x++) {
        let addClass = "";
        if (chats[x]["sender_id"] == sender_id) {
          addClass = "current-user-chat";
        } else {
          addClass = "distance-user-chat";
        }
  
        html += `
        <div class='`+addClass +`'>
          <h5>`+chats[x]["message"] +`</h5>
        </div>
        `;
      }
      $("#chat-container").append(html);
      scrollChat();
    });
  
  
    function scrollChat(){
      $('#chat-container').animate({
        scrollTop:$('#chat-container').offset().top+$('#chat-container')[0].scrollHeight
      }, 0);
    }
  
  </script>